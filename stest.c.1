#include <windows.h>
#include <stdio.h>

#include "config.h"

// prototypes 
int FilesCreate(UINT NumberOffiles);
int ConnectWinHttp();

__int64 GetSitesListSize(){
    HANDLE hFile;
    BOOL   bSuccess;
    LARGE_INTEGER szFilesize;
   
    // open sites.txt for reading
    hFile = CreateFile(siteurl, 
		    0,
		    0,
		    NULL,
		    OPEN_EXISTING,
		    FILE_ATTRIBUTE_NORMAL,
		    NULL);

    if(hFile == INVALID_HANDLE_VALUE){
	    printf("failed to open url file error: %d\n", GetLastError());
	    return 0;
    }

    bSuccess = GetFileSizeEx(hFile, &szFilesize);
    if(FALSE == bSuccess){
	    // closing handle
	    CloseHandle(hFile);

	    printf("retrieving file size failed with error: %d\n", GetLastError());
	    return 0;
    }

    // close handle
    CloseHandle(hFile);

    // return signed 
    return szFilesize.QuadPart;
}

/* 
 * handle HTTP connection 
 * first reading the file and send each URL to the HTTP function
 * the idea is to initiate connection to as much different sites
 * and testing the impact of hooking
*/

int ReadSiteUrl(int szTestFile){
    HANDLE hFile;
    BOOL   bSuccess;
    DWORD dwFileSize;

    // reading the defined URL file
    hFile = CreateFile(siteurl,
		GENERIC_READ,
		FILE_SHARE_READ,
		NULL,
		OPEN_EXISTING,
		FILE_ATTRIBUTE_NORMAL,
		NULL);

    if(hFile == INVALID_HANDLE_VALUE){
	    printf("failed to open url file for reading with error: %d\n",
			    GetLastError());
	    return 0;
    }

    // we have the file size
    dwFileSize = szTestFile;

    /*
     * The low-order DWORD of the file size indicates success.
     * If lpFileSizeHigh is not NULL, the function puts the high-order DWORD of the file size
     * into the variable pointed to by that parameter.
     * If lpFileSizeHigh is NULL, 0xFFFFFFFF indicates failure. 
     * https://msdn.microsoft.com/en-us/library/ms890939.aspx
    */

    // no general error
    if(dwFileSize != 0xFFFFFFFF){
	    LPSTR pszFileText;

           /*
	    * Allocates the specified bytes from the heap.
	    *
	    * GPTR Combines GMEM_FIXED and GMEM_ZEROINIT.
	    * https://msdn.microsoft.com/en-us/library/windows/desktop/aa366574(v=vs.85).aspx
	    *
	    */
	    pszFileText = GlobalAlloc(GPTR, dwFileSize + 1);

            if(pszFileText != NULL){
		    DWORD dwRead;
		    if(ReadFile(hFile, pszFileText, dwFileSize, &dwRead, NULL)){
		    	pszFileText[dwFileSize] = 0; // Add null terminator
			while((fgets(pszFileText, dwFileSize, hFile)) != NULL){
				printf("%s\n", pszFileText);
			}
	    	    }
	    	   // free memory
	   	   GlobalFree(pszFileText);
	    }
	    // close file handle
	    CloseHandle(hFile);
    }

    return 1;
}

int main(int argc, char *argv[]){
    UINT NumberOffiles = 5;
    int szTestFile;

    szTestFile = GetSitesListSize();
    if(szTestFile){
	    printf("url file size %db\n", szTestFile);

    	    // calling FileCreate for random file creation
    	    FilesCreate(NumberOffiles);

    	    // testing WinHTTP IOC
	    ReadSiteUrl(szTestFile);

    	    //ConnectWinHttp("www.microsoft.com");
    }else{
	    printf("error reading site url file, going out ...\n");
	    return -1;
    }

    return 0;
}
